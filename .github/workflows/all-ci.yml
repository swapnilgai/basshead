name: Basshead Multiplatform CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:
    inputs:
      build_ios:
        description: 'Build iOS app'
        required: false
        default: 'true'
        type: boolean

jobs:
  # Your existing Android workflow - keep it exactly as is
  android-build:
    name: Android Build (Existing Working Flow)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set gradle.properties from secret
        run: echo "${{ secrets.KEYSTORE_PROPERTIES }}" | base64 --decode > keystore.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run KtLint
        run: ./gradlew ktlintCheck --info --stacktrace

      - name: Run all build and test tasks
        run: |
          ./gradlew :composeApp:assembleInternalDebug :composeApp:assembleProductionRelease -Pbuildkonfig.flavor=internalDebug --stacktrace

      - name: Upload Android APKs
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: |
            composeApp/build/outputs/apk/internalDebug/*.apk
            composeApp/build/outputs/apk/productionRelease/*.apk
          retention-days: 14

  # iOS build - ACTUAL iOS APP BUILD
  ios-build:
    name: iOS Build (Real Build)
    runs-on: macos-latest
    needs: android-build
    # Only run on main branch or manual trigger to save minutes
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') || 
      (github.event_name == 'workflow_dispatch')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Kotlin/Native
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      # Force build iOS framework even if not configured
      - name: Build iOS Framework
        run: |
          echo "Building iOS framework..."
          ./gradlew :composeApp:linkDebugFrameworkIosX64 --stacktrace

      # Install CocoaPods if iosApp exists
      - name: Setup iOS Dependencies
        run: |
          if [ -d "iosApp" ]; then
            echo "iosApp folder found, installing dependencies..."
            gem install cocoapods
            cd iosApp
            pod install
          else
            echo "No iosApp folder found, creating minimal iOS app..."
            # This would need your project structure
          fi

      # Build actual iOS app
      - name: Build iOS App
        run: |
          if [ -d "iosApp" ]; then
            echo "Building iOS app..."
            cd iosApp
            xcodebuild -workspace iosApp.xcworkspace \
              -scheme iosApp \
              -configuration Debug \
              -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.4' \
              -derivedDataPath build \
              build
          else
            echo "‚ùå Cannot build iOS app - iosApp folder missing"
            echo "Your project needs iOS configuration first"
            exit 1
          fi

      - name: Upload iOS App
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-app
          path: iosApp/build/Build/Products/Debug-iphonesimulator/*.app
          retention-days: 14